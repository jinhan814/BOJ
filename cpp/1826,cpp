#include <bits/stdc++.h>
#define fastio cin.tie(0)->sync_with_stdio(0)
using namespace std;

using pii = pair<int, int>;

int main() {
	fastio;
	int n, m, fuel, cnt = 0, flag = 0; cin >> n;
	vector<pii> v(n);
	for (auto& [a, b] : v) cin >> a >> b;
	cin >> m >> fuel;

	sort(v.begin(), v.end());
	while (v.size() && v.back().first >= m) v.pop_back();
	v.push_back({ m, 0 });

	priority_queue<int> PQ;
	for (int i = 0, prv = 0; i < v.size(); i++) {
		const auto& [pos, t] = v[i];
		while (PQ.size() && fuel < pos - prv) fuel += PQ.top(), cnt++, PQ.pop();
		if (fuel < pos - prv) { flag = 1; break; }
		fuel -= pos - prv, prv = pos, PQ.push(t);
	}
	if (flag) cout << -1 << '\n';
	else cout << cnt << '\n';
}